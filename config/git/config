[user]
  name = Mauro Pinto
  email = mauro.s.pinto@gmail.com

[core]
  autocrlf = false
  whitespace = fix,space-before-tab,tab-in-indent,trailing-space
  pager = diff-so-fancy | less --tabs=4 -RFX

[apply]
  whitespace = fix
[alias]
  br = branch
  branches = branch -a
  brs = branch -a
  ci = commit
  co = checkout
  df = diff
  g = grep -I
  lg = log -p
  pp = !"echo 'Pull'; git pull; echo 'Push'; git push"
  rb = rbranch
  rv = review
  s = status
  unstage = reset HEAD --
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD
  undo = reset HEAD~
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[merge]
  log = true
[rerere]
  enabled = 1
[push]
  default = simple
[pull]
# When true, rebase branches on top of the fetched branch, instead of merging the default branch from the default
# remote when "git pull" is run. See "branch.<name>.rebase" for setting this on a per-branch basis.
  rebase = true
[rebase]
# When set to true, automatically create a temporary stash entry before the operation begins, and apply it after
# the operation ends. This means that you can run rebase on a dirty worktree. However, use with care: the final
# stash application after a successful rebase might result in non-trivial conflicts. This option can be
# overridden by the --no-autostash and --autostash options of git-rebase[1]. Defaults to false.
# It is the equivalent to: git stash & git pull --rebase & git stash pop.
  autostash = true
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"
[url "git@heroku.com:"]
  insteadOf = "heroku:"
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
